from 助手 import *

分镜序号 = 0
片段列表 = 列表()
分镜文档 = '文档集合/分镜.txt'

工厂实例 = 视频工厂()
总视频序号 = 0

for 分镜 in 阅读分镜文档(分镜文档):
    台词 = 分镜.获取('文案')
    # 过滤特殊符号
    标题 = 自动断句(台词).连文('')
    纯图片名 = f'{分镜序号}-{标题}'
    视频素材文件名 = 纯图片名 + '.mp4'
    视频素材文件路径 = f'视频/{视频素材文件名}'
    视频 = 抓取视频(视频素材文件路径)

    片段列表.添加(视频)
    分镜序号 += 1

    #每60个视频分镜，合成一个视频，避免最后的视频过长
    if 分镜序号 % 60 == 0:
        if 是否存在(f'输出视频{总视频序号}.mp4'):
            #如果已经有了这个视频，直接跳过
            片段列表 = 列表()
            总视频序号 += 1
        else:
            总视频 = 合并视频(片段列表)

            原背景音乐 = 抓取音频(全局配置.背景音乐)
            总视频时长 = 总视频.时长
            背景音乐 = 工厂实例.处理背景音乐(原背景音乐, 总视频时长)
            背景音乐.调节音量(全局配置.背景音乐音量)
            背景音乐.剪(结束时间=总视频.时长)
            总视频.配音(背景音乐)
            总视频 = 工厂实例.暗蓝滤镜(总视频)

            总视频.保存(f'输出视频{总视频序号}.mp4')
            总视频序号 += 1

            片段列表 = 列表()

if 片段列表.长 > 0:
    总视频 = 合并视频(片段列表)

    原背景音乐 = 抓取音频(全局配置.背景音乐)
    总视频时长 = 总视频.时长
    背景音乐 = 工厂实例.处理背景音乐(原背景音乐, 总视频时长)
    背景音乐.调节音量(全局配置.背景音乐音量)
    背景音乐.剪(结束时间=总视频.时长)
    总视频.配音(背景音乐)
    总视频 = 工厂实例.暗蓝滤镜(总视频)

    总视频.保存(f'输出视频{总视频序号}.mp4')